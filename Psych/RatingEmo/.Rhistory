Extra_Gaze <- cbind(CompOnly_Overall_Time, NoFace_Overall_Time, BodyOnly_Overall_Time)
colnames(Extra_Gaze) <-c("S_CompOnly_Overall_Time","S_NoFace_Overall_Time", "S_BodyOnly_Overall_Time")
H_talk_Type_2 <- cbind(H_talk_Type_2,Extra_Gaze)
# aggregate/combined them together
H_talk_Type_2_sum <- aggregate(H_talk_Type_2[, 4:101],list(H_talk_Type_2$Dyad),sum)
H_talk_Type_2_mean <- aggregate(H_talk_Type_2[, 4:101],list(H_talk_Type_2$Dyad),mean)
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(H_talk_Type_2_mean,paste(Path,paste("/Output/dyad2_data_mean_",Name,sep=""),sep = ""))
#get the total gaze actions in the whole dyad / total time of typing
Percent_Total <- H_talk_Type_2_sum[,4:7]/H_talk_Type_2_sum$Duration * 100.0
Percent_Total_Extra <- H_talk_Type_2_sum[,97:99]/H_talk_Type_2_sum$Duration * 100.0
Percent_Speak <- H_talk_Type_2_sum$S_Speaking_Overall_Time/H_talk_Type_2_sum$Duration * 100.0
Percent_Total <- cbind(Percent_Total,Percent_Total_Extra)
Percent_Total <- cbind(Percent_Total,Percent_Speak)
colnames(Percent_Total) <-c("S_Around_Per_Total", "S_Monitor_Per_Total", "S_Keyboard_Per_Total",
"S_Face_Per_Total", "S_CompOnly_Per_Total", "S_NoFace_Per_Total",
"S_BodyOnly_Per_Total", "S_Speak_Per_Total")
H_talk_Type_2_sum <- cbind(H_talk_Type_2_sum,Percent_Total)
write.csv(H_talk_Type_2_sum,paste(Path,paste("/Output/dyad2_data_sum_",Name,sep=""),sep = ""))
#-------------------------------adding the extra personal rating variable----------------------------------------#
hpa1_comb <- Rapport_Data$hpa1b2 + Rapport_Data$hpa1t6
hpa2_comb <- Rapport_Data$hpa2b2 + Rapport_Data$hpa2t6
ssa1_comb <- Rapport_Data$ssa1b2 + Rapport_Data$ssa1t6
ssa2_comb <- Rapport_Data$ssa2b2 + Rapport_Data$ssa2t6
add_rating <- cbind(hpa1_comb,hpa2_comb,ssa1_comb,ssa2_comb)
Rapport_Data <- cbind(Rapport_Data,add_rating)
#----------------------------------------Stat test------------------------------------------------------------------#
#---------------------------DYAD 1------------------------------------#
combinedForSum <- merge(x=Rapport_Data, y=H_talk_Type_1_sum, by.x='hdyad', by.y='Group.1')
Result <- array(numeric(),c(3,7))
result <- cor.test(combinedForSum$hpa1t4,combinedForSum$ssa1t4, method = "pearson")
Result[1,1] <-result$statistic #t-value
Result[2,1] <-result$estimate #corelation
Result[3,1] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa1m2,combinedForSum$ssa1m2, method = "pearson")
Result[1,2] <-result$statistic #t-value
Result[2,2] <-result$estimate #corelation
Result[3,2] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa1b2,combinedForSum$ssa1b2, method = "pearson")
Result[1,3] <-result$statistic #t-value
Result[2,3] <-result$estimate #corelation
Result[3,3] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa1b8,combinedForSum$ssa1b8, method = "pearson")
Result[1,4] <-result$statistic #t-value
Result[2,4] <-result$estimate #corelation
Result[3,4] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa1t6,combinedForSum$ssa1t6, method = "pearson")
Result[1,5] <-result$statistic #t-value
Result[2,5] <-result$estimate #corelation
Result[3,5] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa1b3,combinedForSum$ssa1b3, method = "pearson")
Result[1,6] <-result$statistic #t-value
Result[2,6] <-result$estimate #corelation
Result[3,6] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa1_comb,combinedForSum$ssa1_comb, method = "pearson")
Result[1,7] <-result$statistic #t-value
Result[2,7] <-result$estimate #corelation
Result[3,7] <-result$p.value #p-value
colnames(Result) <-c("Effort", "Irritated", "Patient", "Interested", "Responsible", "Responsive", "Pat_Resposoble")
rownames (Result)<-c("tval", "cor", "pval")
print (Result)
Sum_Overall <-Result
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(Sum_Overall,paste(Path,paste("/Output/dyad1_hp_cor_ss",Name,sep=""),sep = ""))
#----------------------------------DYAD 2---------------------------------#
combinedForSum <- merge(x=Rapport_Data, y=H_talk_Type_2_sum, by.x='hdyad', by.y='Group.1')
#3 dimension array row is the scale, column is the gaze, depth is stat result
# row: "hhogan","hboredom","hsdesirability","shogan","sboredom","ssdesirability","hpabad","hpabad2","hpagood","hpagood2","spabad","spabad2","spagood","spagood2","rapcomp2"
# column: around, monitor, keyboard, face, componly, no face
# depth: t-value, correlation, p-value
Result <- array(numeric(),c(3,7))
result <- cor.test(combinedForSum$hpa2t4,combinedForSum$ssa2t4, method = "pearson")
Result[1,1] <-result$statistic #t-value
Result[2,1] <-result$estimate #corelation
Result[3,1] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa2m2,combinedForSum$ssa2m2, method = "pearson")
Result[1,2] <-result$statistic #t-value
Result[2,2] <-result$estimate #corelation
Result[3,2] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa2b2,combinedForSum$ssa2b2, method = "pearson")
Result[1,3] <-result$statistic #t-value
Result[2,3] <-result$estimate #corelation
Result[3,3] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa2b8,combinedForSum$ssa2b8, method = "pearson")
Result[1,4] <-result$statistic #t-value
Result[2,4] <-result$estimate #corelation
Result[3,4] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa2t6,combinedForSum$ssa2t6, method = "pearson")
Result[1,5] <-result$statistic #t-value
Result[2,5] <-result$estimate #corelation
Result[3,5] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa2b3,combinedForSum$ssa2b3, method = "pearson")
Result[1,6] <-result$statistic #t-value
Result[2,6] <-result$estimate #corelation
Result[3,6] <-result$p.value #p-value
result <- cor.test(combinedForSum$hpa2_comb,combinedForSum$ssa2_comb, method = "pearson")
Result[1,7] <-result$statistic #t-value
Result[2,7] <-result$estimate #corelation
Result[3,7] <-result$p.value #p-value
colnames(Result) <-c("Effort", "Irritated", "Patient", "Interested", "Responsible", "Responsive", "Pat_Resposoble")
rownames (Result)<-c("tval", "cor", "pval")
print (Result)
Sum_Overall <-Result
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(Sum_Overall,paste(Path,paste("/Output/dyad2_hp_cor_ss",Name,sep=""),sep = ""))
attach(mtcars)
#include library
library(sm)
#read the data-- change it to match with the path
Path <- "D:/Thesis/Thesis_Code/Psych/RatingEmo/"
Threshhold <-150
H_talk <- read.csv(paste(Path,"DiscriptiveData_5talks_H_5mins.csv", sep=""))
Rapport_Data <- read.csv(paste(Path,"personal trait data.csv", sep=""))
#delte useless column
H_talk$SectionStartTime <- NULL
H_talk$Start <- NULL
H_talk$End <-NULL
#select talkType == 2, which is typing
H_talk_Type <- H_talk[H_talk$TalkType == 2,]
#seperate it into different conversation
H_talk_Type_1 <- H_talk_Type[H_talk_Type$Cov == 1,]
H_talk_Type_2 <- H_talk_Type[H_talk_Type$Cov == 2,]
#select typing that is longer than 100 frames
H_talk_Type_1 <- H_talk_Type_1[H_talk_Type_1$Duration > Threshhold,]
H_talk_Type_2 <- H_talk_Type_2[H_talk_Type_2$Duration > Threshhold,]
#----------------------DYAD 1--------------------------------------------#
#calculat the overall of nocomp and no_face gaze
CompOnly_Overall_Time <- H_talk_Type_1$S_Monitor_Overall_Time + H_talk_Type_1$S_Keyboard_Overall_Time
NoFace_Overall_Time <- CompOnly_Overall_Time + H_talk_Type_1$S_Around_Overall_Time
BodyOnly_Overall_Time <- H_talk_Type_1$S_Monitor_Overall_Time + H_talk_Type_1$S_Face_Overall_Time
Extra_Gaze <- cbind(CompOnly_Overall_Time, NoFace_Overall_Time, BodyOnly_Overall_Time)
colnames(Extra_Gaze) <-c("S_CompOnly_Overall_Time","S_NoFace_Overall_Time", "S_BodyOnly_Overall_Time")
H_talk_Type_1 <- cbind(H_talk_Type_1,Extra_Gaze)
# aggregate/combined them together
H_talk_Type_1_sum <- aggregate(H_talk_Type_1[, 4:101],list(H_talk_Type_1$Dyad),sum)
H_talk_Type_1_mean <- aggregate(H_talk_Type_1[, 4:101],list(H_talk_Type_1$Dyad),mean)
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(H_talk_Type_1_mean,paste(Path,paste("/Output/dyad1_data_mean_",Name,sep=""),sep = ""))
#get the total gaze actions in the whole dyad / total time of typing
Percent_Total <- H_talk_Type_1_sum[,4:7]/H_talk_Type_1_sum$Duration * 100.0
Percent_Total_Extra <- H_talk_Type_1_sum[,97:99]/H_talk_Type_1_sum$Duration * 100.0
Percent_Speak <- H_talk_Type_1_sum$S_Speaking_Overall_Time/H_talk_Type_1_sum$Duration * 100.0
Percent_Total <- cbind(Percent_Total,Percent_Total_Extra)
Percent_Total <- cbind(Percent_Total,Percent_Speak)
colnames(Percent_Total) <-c("S_Around_Per_Total", "S_Monitor_Per_Total", "S_Keyboard_Per_Total",
"S_Face_Per_Total", "S_CompOnly_Per_Total", "S_NoFace_Per_Total",
"S_BodyOnly_Per_Total", "S_Speak_Per_Total")
H_talk_Type_1_sum <- cbind(H_talk_Type_1_sum,Percent_Total)
write.csv(H_talk_Type_1_sum,paste(Path,paste("/Output/dyad1_data_sum_",Name,sep=""),sep = ""))
#----------------------DYAD 2--------------------------------------------#
#calculat the overall of nocomp and no_face gaze
CompOnly_Overall_Time <- H_talk_Type_2$S_Monitor_Overall_Time + H_talk_Type_2$S_Keyboard_Overall_Time
NoFace_Overall_Time <- CompOnly_Overall_Time + H_talk_Type_2$S_Around_Overall_Time
BodyOnly_Overall_Time <- H_talk_Type_2$S_Monitor_Overall_Time + H_talk_Type_2$S_Face_Overall_Time
Extra_Gaze <- cbind(CompOnly_Overall_Time, NoFace_Overall_Time, BodyOnly_Overall_Time)
colnames(Extra_Gaze) <-c("S_CompOnly_Overall_Time","S_NoFace_Overall_Time", "S_BodyOnly_Overall_Time")
H_talk_Type_2 <- cbind(H_talk_Type_2,Extra_Gaze)
# aggregate/combined them together
H_talk_Type_2_sum <- aggregate(H_talk_Type_2[, 4:101],list(H_talk_Type_2$Dyad),sum)
H_talk_Type_2_mean <- aggregate(H_talk_Type_2[, 4:101],list(H_talk_Type_2$Dyad),mean)
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(H_talk_Type_2_mean,paste(Path,paste("/Output/dyad2_data_mean_",Name,sep=""),sep = ""))
#get the total gaze actions in the whole dyad / total time of typing
Percent_Total <- H_talk_Type_2_sum[,4:7]/H_talk_Type_2_sum$Duration * 100.0
Percent_Total_Extra <- H_talk_Type_2_sum[,97:99]/H_talk_Type_2_sum$Duration * 100.0
Percent_Speak <- H_talk_Type_2_sum$S_Speaking_Overall_Time/H_talk_Type_2_sum$Duration * 100.0
Percent_Total <- cbind(Percent_Total,Percent_Total_Extra)
Percent_Total <- cbind(Percent_Total,Percent_Speak)
colnames(Percent_Total) <-c("S_Around_Per_Total", "S_Monitor_Per_Total", "S_Keyboard_Per_Total",
"S_Face_Per_Total", "S_CompOnly_Per_Total", "S_NoFace_Per_Total",
"S_BodyOnly_Per_Total", "S_Speak_Per_Total")
H_talk_Type_2_sum <- cbind(H_talk_Type_2_sum,Percent_Total)
write.csv(H_talk_Type_2_sum,paste(Path,paste("/Output/dyad2_data_sum_",Name,sep=""),sep = ""))
face_gaze <- t.test(H_talk_Type_1_sum$S_Face_Per_Total,H_talk_Type_2_sum$S_Face_Per_Total,paired=TRUE)
around_gaze <- t.test(H_talk_Type_1_sum$S_Around_Per_Total,H_talk_Type_2_sum$S_Around_Per_Total,paired=TRUE)
monitor_gaze <- t.test(H_talk_Type_1_sum$S_Monitor_Per_Total,H_talk_Type_2_sum$S_Monitor_Per_Total,paired=TRUE)
keyboard_gaze <- t.test(H_talk_Type_1_sum$S_Keyboard_Per_Total,H_talk_Type_2_sum$S_Keyboard_Per_Total,paired=TRUE)
comn_gaze <- t.test(H_talk_Type_1_sum$S_CompOnly_Per_Total,H_talk_Type_2_sum$S_CompOnly_Per_Total,paired=TRUE)
body_gaze <- t.test(H_talk_Type_1_sum$S_BodyOnly_Per_Total,H_talk_Type_2_sum$S_BodyOnly_Per_Total,paired=TRUE)
face_gaze_cor <- cor.test(H_talk_Type_1_sum$S_Face_Per_Total,H_talk_Type_2_sum$S_Face_Per_Total, method = "pearson")
around_gaze_cor <- cor.test(H_talk_Type_1_sum$S_Around_Per_Total,H_talk_Type_2_sum$S_Around_Per_Total, method = "pearson")
monitor_gaze_cor <- cor.test(H_talk_Type_1_sum$S_Monitor_Per_Total,H_talk_Type_2_sum$S_Monitor_Per_Total, method = "pearson")
keyboard_gaze_cor <- cor.test(H_talk_Type_1_sum$S_Keyboard_Per_Total,H_talk_Type_2_sum$S_Keyboard_Per_Total, method = "pearson")
comn_gaze_cor <- cor.test(H_talk_Type_1_sum$S_CompOnly_Per_Total,H_talk_Type_2_sum$S_CompOnly_Per_Total, method = "pearson")
body_gaze_cor <- cor.test(H_talk_Type_1_sum$S_BodyOnly_Per_Total,H_talk_Type_2_sum$S_BodyOnly_Per_Total, method = "pearson")
hp_4 <- t.test(Rapport_Data$hpa1b8,Rapport_Data$hpa2b8,paired=TRUE)
ss_4 <- t.test(Rapport_Data$ssa1b8,Rapport_Data$ssa2b8,paired=TRUE)
hp_5 <- t.test(Rapport_Data$hpa1t6,Rapport_Data$hpa2t6,paired=TRUE)
ss_5 <- t.test(Rapport_Data$ssa1t6,Rapport_Data$ssa2t6,paired=TRUE)
hp_4_cor <- cor.test(Rapport_Data$hpa1b8,Rapport_Data$hpa2b8, method = "pearson")
ss_4_cor <- cor.test(Rapport_Data$ssa1b8,Rapport_Data$ssa2b8, method = "pearson")
hp_5_cor <- cor.test(Rapport_Data$hpa1t6,Rapport_Data$hpa2t6, method = "pearson")
ss_5_cor <- cor.test(Rapport_Data$ssa1t6,Rapport_Data$ssa2t6, method = "pearson")
par(mfrow=c(2,2))
plot(Rapport_Data$hpa1b8,Rapport_Data$hpa2b8,
xlab='Keyboard', ylab='Remote Control',main="AAC Users Partner Rating: Interest")
plot(Rapport_Data$ssa1b8,Rapport_Data$ssa2b8,
xlab='Keyboard', ylab='Remote Control',main="Normal Speaker Self Rating: Interest")
plot(Rapport_Data$hpa1t6,Rapport_Data$hpa2t6,
xlab='Keyboard', ylab='Remote Control',main="AAC Users Partner Rating: Reponsible")
plot(Rapport_Data$ssa1t6,Rapport_Data$ssa2t6,
xlab='Keyboard', ylab='Remote Control',main="Normal Speaker Self Rating: Reponsible")
attach(mtcars)
par(mfrow=c(2,3))
plot(H_talk_Type_1_sum$S_Face_Per_Total,H_talk_Type_2_sum$S_Face_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Face")
plot(H_talk_Type_1_sum$S_Around_Per_Total,H_talk_Type_2_sum$S_Around_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Around")
plot(H_talk_Type_1_sum$S_Monitor_Per_Total,H_talk_Type_2_sum$S_Monitor_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Monitor")
plot(H_talk_Type_1_sum$S_Keyboard_Per_Total,H_talk_Type_2_sum$S_Keyboard_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Typing Device")
plot(H_talk_Type_1_sum$S_CompOnly_Per_Total,H_talk_Type_2_sum$S_CompOnly_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Communication Method")
plot(H_talk_Type_1_sum$S_BodyOnly_Per_Total,H_talk_Type_2_sum$S_BodyOnly_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Body")
combinedForSum1 <- merge(x=Rapport_Data, y=H_talk_Type_1_sum, by.x='hdyad', by.y='Group.1')
combinedForSum2 <- merge(x=Rapport_Data, y=H_talk_Type_2_sum, by.x='hdyad', by.y='Group.1')
attach(mtcars)
par(mfrow=c(2,3),oma = c(0, 0, 2, 0))
plot(combinedForSum1$ssa1b8,combinedForSum1$S_Face_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Face")
plot(combinedForSum1$ssa1b8,combinedForSum1$S_Around_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Around")
plot(combinedForSum1$ssa1b8,combinedForSum1$S_Monitor_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Monitor")
plot(combinedForSum1$ssa1b8,combinedForSum1$S_Keyboard_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Typing Device")
plot(combinedForSum1$ssa1b8,combinedForSum1$S_CompOnly_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Communication Method")
plot(combinedForSum1$ssa1b8,combinedForSum1$S_BodyOnly_Per_Total,
xlab='Keyboard', ylab='Remote Control',main="Body")
mtext("Self Rating in Keyboard", outer = TRUE, cex = 1.5)
#include library
library(sm)
#read the data-- change it to match with the path
Path <- "D:/Thesis/Thesis_Code/Psych/RatingEmo/"
Threshhold <-240
H_talk <- read.csv(paste(Path,"DiscriptiveData_5talks_H_5mins.csv", sep=""))
Rapport_Data <- read.csv(paste(Path,"personal trait data.csv", sep=""))
Vocal_rating <-read.csv(paste(Path,"vocalratingsfinaldata.csv", sep=""))
#delte useless column
H_talk$SectionStartTime <- NULL
H_talk$Start <- NULL
H_talk$End <-NULL
#select talkType == 2, which is typing
H_talk_Type <- H_talk[H_talk$TalkType == 2,]
#seperate it into different conversation
H_talk_Type_1 <- H_talk_Type[H_talk_Type$Cov == 1,]
H_talk_Type_2 <- H_talk_Type[H_talk_Type$Cov == 2,]
#select typing that is longer than 100 frames
H_talk_Type_1 <- H_talk_Type_1[H_talk_Type_1$Duration > Threshhold,]
H_talk_Type_2 <- H_talk_Type_2[H_talk_Type_2$Duration > Threshhold,]
#H_talk_Type_1_raw <- H_talk_Type_1[H_talk_Type_1$Duration > Threshhold,]
#H_talk_Type_2_raw <- H_talk_Type_2[H_talk_Type_2$Duration > Threshhold,]
#H_talk_Type_1_log <-log(H_talk_Type_1_raw[,4:98])
#H_talk_Type_1 <-cbind(H_talk_Type_1_raw[,1:3],H_talk_Type_1_log)
#H_talk_Type_2_log <-log(H_talk_Type_2_raw[,4:98])
#H_talk_Type_2 <-cbind(H_talk_Type_2_raw[,1:3],H_talk_Type_2_log)
#----------------------DYAD 1--------------------------------------------#
#calculat the overall of nocomp and no_face gaze
CompOnly_Overall_Time <- H_talk_Type_1$S_Monitor_Overall_Time + H_talk_Type_1$S_Keyboard_Overall_Time
NoFace_Overall_Time <- CompOnly_Overall_Time + H_talk_Type_1$S_Around_Overall_Time
BodyOnly_Overall_Time <- H_talk_Type_1$S_Monitor_Overall_Time + H_talk_Type_1$S_Face_Overall_Time
Extra_Gaze <- cbind(CompOnly_Overall_Time, NoFace_Overall_Time, BodyOnly_Overall_Time)
colnames(Extra_Gaze) <-c("S_CompOnly_Overall_Time","S_NoFace_Overall_Time", "S_BodyOnly_Overall_Time")
H_talk_Type_1 <- cbind(H_talk_Type_1,Extra_Gaze)
# aggregate/combined them together
H_talk_Type_1_sum <- aggregate(H_talk_Type_1[, 4:101],list(H_talk_Type_1$Dyad),sum)
H_talk_Type_1_mean <- aggregate(H_talk_Type_1[, 4:101],list(H_talk_Type_1$Dyad),mean)
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(H_talk_Type_1_mean,paste(Path,paste("/Output/dyad1_data_mean_",Name,sep=""),sep = ""))
#get the total gaze actions in the whole dyad / total time of typing
Percent_Total <- H_talk_Type_1_sum[,4:7]/H_talk_Type_1_sum$Duration * 100.0
Percent_Total_Extra <- H_talk_Type_1_sum[,97:99]/H_talk_Type_1_sum$Duration * 100.0
Percent_Speak <- H_talk_Type_1_sum$S_Speaking_Overall_Time/H_talk_Type_1_sum$Duration * 100.0
Percent_Total <- cbind(Percent_Total,Percent_Total_Extra)
Percent_Total <- cbind(Percent_Total,Percent_Speak)
colnames(Percent_Total) <-c("S_Around_Per_Total", "S_Monitor_Per_Total", "S_Keyboard_Per_Total",
"S_Face_Per_Total", "S_CompOnly_Per_Total", "S_NoFace_Per_Total",
"S_BodyOnly_Per_Total", "S_Speak_Per_Total")
H_talk_Type_1_sum <- cbind(H_talk_Type_1_sum,Percent_Total)
write.csv(H_talk_Type_1_sum,paste(Path,paste("/Output/dyad1_data_sum_",Name,sep=""),sep = ""))
#----------------------DYAD 2--------------------------------------------#
#calculat the overall of nocomp and no_face gaze
CompOnly_Overall_Time <- H_talk_Type_2$S_Monitor_Overall_Time + H_talk_Type_2$S_Keyboard_Overall_Time
NoFace_Overall_Time <- CompOnly_Overall_Time + H_talk_Type_2$S_Around_Overall_Time
BodyOnly_Overall_Time <- H_talk_Type_2$S_Monitor_Overall_Time + H_talk_Type_2$S_Face_Overall_Time
Extra_Gaze <- cbind(CompOnly_Overall_Time, NoFace_Overall_Time, BodyOnly_Overall_Time)
colnames(Extra_Gaze) <-c("S_CompOnly_Overall_Time","S_NoFace_Overall_Time", "S_BodyOnly_Overall_Time")
H_talk_Type_2 <- cbind(H_talk_Type_2,Extra_Gaze)
# aggregate/combined them together
H_talk_Type_2_sum <- aggregate(H_talk_Type_2[, 4:101],list(H_talk_Type_2$Dyad),sum)
H_talk_Type_2_mean <- aggregate(H_talk_Type_2[, 4:101],list(H_talk_Type_2$Dyad),mean)
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(H_talk_Type_2_mean,paste(Path,paste("/Output/dyad2_data_mean_",Name,sep=""),sep = ""))
#get the total gaze actions in the whole dyad / total time of typing
Percent_Total <- H_talk_Type_2_sum[,4:7]/H_talk_Type_2_sum$Duration * 100.0
Percent_Total_Extra <- H_talk_Type_2_sum[,97:99]/H_talk_Type_2_sum$Duration * 100.0
Percent_Speak <- H_talk_Type_2_sum$S_Speaking_Overall_Time/H_talk_Type_2_sum$Duration * 100.0
Percent_Total <- cbind(Percent_Total,Percent_Total_Extra)
Percent_Total <- cbind(Percent_Total,Percent_Speak)
colnames(Percent_Total) <-c("S_Around_Per_Total", "S_Monitor_Per_Total", "S_Keyboard_Per_Total",
"S_Face_Per_Total", "S_CompOnly_Per_Total", "S_NoFace_Per_Total",
"S_BodyOnly_Per_Total", "S_Speak_Per_Total")
H_talk_Type_2_sum <- cbind(H_talk_Type_2_sum,Percent_Total)
write.csv(H_talk_Type_2_sum,paste(Path,paste("/Output/dyad2_data_sum_",Name,sep=""),sep = ""))
#--------------------------------clean up the vocal rating --------------------------------------------------------#
Vocal_rating <- Vocal_rating[Vocal_rating$minu == 3,]
Vocal_rating <- Vocal_rating[Vocal_rating$raid == 5,]
Vocal_rating_1 <- Vocal_rating[Vocal_rating$clip == 1,]
Vocal_rating_2 <- Vocal_rating[Vocal_rating$clip == 2,]
#-------------------------------adding the extra personal rating variable----------------------------------------#
hpa1_comb <- Rapport_Data$hpa1b2 + Rapport_Data$hpa1t6
hpa2_comb <- Rapport_Data$hpa2b2 + Rapport_Data$hpa2t6
ssa1_comb <- Rapport_Data$ssa1b2 + Rapport_Data$ssa1t6
ssa2_comb <- Rapport_Data$ssa2b2 + Rapport_Data$ssa2t6
add_rating <- cbind(hpa1_comb,hpa2_comb,ssa1_comb,ssa2_comb)
Rapport_Data <- cbind(Rapport_Data,add_rating)
#----------------------------------------Stat test------------------------------------------------------------------#
#---------------------------DYAD 1------------------------------------#
combinedForSum <- merge(x=Rapport_Data, y=H_talk_Type_1_sum, by.x='hdyad', by.y='Group.1')
combinedForSum <-merge(x=combinedForSum, y=Vocal_rating_1, by.x='hdyad', by.y='dyad' )
#3 dimension array row is the scale, column is the gaze, depth is stat result
# row: "hhogan","hboredom","hsdesirability","shogan","sboredom","ssdesirability"
#,"hpabad","hpabad2","hpagood","hpagood2","spabad","spabad2","spagood","spagood2","rapcomp2"
# column: around, monitor, keyboard, face, componly, no face
# depth: t-value, correlation, p-value
Result <- array(numeric(),c(16,7,3))
for (i in 984:991){
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1t4, method = "pearson")
Result[i-983,1,1] <-result$statistic #t-value
Result[i-983,1,2] <-result$estimate #corelation
Result[i-983,1,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1m2, method = "pearson")
Result[i-983,2,1] <-result$statistic #t-value
Result[i-983,2,2] <-result$estimate #corelation
Result[i-983,2,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1b2, method = "pearson")
Result[i-983,3,1] <-result$statistic #t-value
Result[i-983,3,2] <-result$estimate #corelation
Result[i-983,3,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1b8, method = "pearson")
Result[i-983,4,1] <-result$statistic #t-value
Result[i-983,4,2] <-result$estimate #corelation
Result[i-983,4,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1t6, method = "pearson")
Result[i-983,5,1] <-result$statistic #t-value
Result[i-983,5,2] <-result$estimate #corelation
Result[i-983,5,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1b3, method = "pearson")
Result[i-983,6,1] <-result$statistic #t-value
Result[i-983,6,2] <-result$estimate #corelation
Result[i-983,6,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1_comb, method = "pearson")
Result[i-983,7,1] <-result$statistic #t-value
Result[i-983,7,2] <-result$estimate #corelation
Result[i-983,7,3] <-result$p.value #p-value
}
for (i in 1016:1023){
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1t4, method = "pearson")
Result[i-1007,1,1] <-result$statistic #t-value
Result[i-1007,1,2] <-result$estimate #corelation
Result[i-1007,1,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1m2, method = "pearson")
Result[i-1007,2,1] <-result$statistic #t-value
Result[i-1007,2,2] <-result$estimate #corelation
Result[i-1007,2,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1b2, method = "pearson")
Result[i-1007,3,1] <-result$statistic #t-value
Result[i-1007,3,2] <-result$estimate #corelation
Result[i-1007,3,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1b8, method = "pearson")
Result[i-1007,4,1] <-result$statistic #t-value
Result[i-1007,4,2] <-result$estimate #corelation
Result[i-1007,4,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1t6, method = "pearson")
Result[i-1007,5,1] <-result$statistic #t-value
Result[i-1007,5,2] <-result$estimate #corelation
Result[i-1007,5,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1b3, method = "pearson")
Result[i-1007,6,1] <-result$statistic #t-value
Result[i-1007,6,2] <-result$estimate #corelation
Result[i-1007,6,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa1_comb, method = "pearson")
Result[i-1007,7,1] <-result$statistic #t-value
Result[i-1007,7,2] <-result$estimate #corelation
Result[i-1007,7,3] <-result$p.value #p-value
}
colnames(Result) <-c("Effort", "Irritated", "Patient", "Interested", "Responsible", "Responsive",
"Pat_Resposoble")
rownames (Result)<-c("around", "monitor", "keyboard", "face", "comp_only", "no_face","body_only",
"s_speak", "power",	"enunciated",	"chillness",	"presence",	"motherease",
"calmness",	"dominance",	"responsivity")
print (Result)
Sum_Overall <-Result
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(Sum_Overall[,,1],paste(Path,paste("/Output/dyad1_ss_total_per_tval_",Name,sep=""),sep = ""))
write.csv(Sum_Overall[,,2],paste(Path,paste("/Output/dyad1_ss_total_per_cor_",Name,sep=""),sep = ""))
write.csv(Sum_Overall[,,3],paste(Path,paste("/Output/dyad1_ss_total_per_pval_",Name,sep=""),sep = ""))
#----------------------------------DYAD 2---------------------------------#
combinedForSum <- merge(x=Rapport_Data, y=H_talk_Type_2_sum, by.x='hdyad', by.y='Group.1')
combinedForSum <-merge(x=combinedForSum, y=Vocal_rating_2, by.x='hdyad', by.y='dyad' )
#3 dimension array row is the scale, column is the gaze, depth is stat result
# row: "hhogan","hboredom","hsdesirability","shogan","sboredom","ssdesirability","hpabad","hpabad2","hpagood","hpagood2","spabad","spabad2","spagood","spagood2","rapcomp2"
# column: around, monitor, keyboard, face, componly, no face
# depth: t-value, correlation, p-value
Result <- array(numeric(),c(16,7,3))
for (i in 984:991){
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2t4, method = "pearson")
Result[i-983,1,1] <-result$statistic #t-value
Result[i-983,1,2] <-result$estimate #corelation
Result[i-983,1,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2m2, method = "pearson")
Result[i-983,2,1] <-result$statistic #t-value
Result[i-983,2,2] <-result$estimate #corelation
Result[i-983,2,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2b2, method = "pearson")
Result[i-983,3,1] <-result$statistic #t-value
Result[i-983,3,2] <-result$estimate #corelation
Result[i-983,3,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2b8, method = "pearson")
Result[i-983,4,1] <-result$statistic #t-value
Result[i-983,4,2] <-result$estimate #corelation
Result[i-983,4,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2t6, method = "pearson")
Result[i-983,5,1] <-result$statistic #t-value
Result[i-983,5,2] <-result$estimate #corelation
Result[i-983,5,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2b3, method = "pearson")
Result[i-983,6,1] <-result$statistic #t-value
Result[i-983,6,2] <-result$estimate #corelation
Result[i-983,6,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2_comb, method = "pearson")
Result[i-983,7,1] <-result$statistic #t-value
Result[i-983,7,2] <-result$estimate #corelation
Result[i-983,7,3] <-result$p.value #p-value
}
for (i in 1016:1023){
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2t4, method = "pearson")
Result[i-1007,1,1] <-result$statistic #t-value
Result[i-1007,1,2] <-result$estimate #corelation
Result[i-1007,1,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2m2, method = "pearson")
Result[i-1007,2,1] <-result$statistic #t-value
Result[i-1007,2,2] <-result$estimate #corelation
Result[i-1007,2,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2b2, method = "pearson")
Result[i-1007,3,1] <-result$statistic #t-value
Result[i-1007,3,2] <-result$estimate #corelation
Result[i-1007,3,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2b8, method = "pearson")
Result[i-1007,4,1] <-result$statistic #t-value
Result[i-1007,4,2] <-result$estimate #corelation
Result[i-1007,4,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2t6, method = "pearson")
Result[i-1007,5,1] <-result$statistic #t-value
Result[i-1007,5,2] <-result$estimate #corelation
Result[i-1007,5,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2b3, method = "pearson")
Result[i-1007,6,1] <-result$statistic #t-value
Result[i-1007,6,2] <-result$estimate #corelation
Result[i-1007,6,3] <-result$p.value #p-value
result <- cor.test(combinedForSum[,i],combinedForSum$ssa2_comb, method = "pearson")
Result[i-1007,7,1] <-result$statistic #t-value
Result[i-1007,7,2] <-result$estimate #corelation
Result[i-1007,7,3] <-result$p.value #p-value
}
colnames(Result) <-c("Effort", "Irritated", "Patient", "Interested", "Responsible", "Responsive",
"Pat_Resposoble")
rownames (Result)<-c("around", "monitor", "keyboard", "face", "comp_only", "no_face","body_only",
"s_speak", "power",	"enunciated",	"chillness",	"presence",	"motherease",
"calmness",	"dominance",	"responsivity")
print (Result)
Sum_Overall <-Result
Name <-paste(Threshhold,"f.csv",sep="")
write.csv(Sum_Overall[,,1],paste(Path,paste("/Output/dyad2_ss_total_per_tval_",Name,sep=""),sep = ""))
write.csv(Sum_Overall[,,2],paste(Path,paste("/Output/dyad2_ss_total_per_cor_",Name,sep=""),sep = ""))
write.csv(Sum_Overall[,,3],paste(Path,paste("/Output/dyad2_ss_total_per_pval_",Name,sep=""),sep = ""))
personal.trait.data <- read.csv("D:/Thesis/Thesis_Code/Psych/RatingEmo/personal trait data.csv", header=FALSE)
View(personal.trait.data)
personal.trait.data <- read.csv("D:/Thesis/Thesis_Code/Psych/RatingEmo/personal trait data.csv")
View(personal.trait.data)
dataP = personal.trait.data
dataP = personal.trait.data
> personal.trait.data <- read.csv("D:/Thesis/Thesis_Code/Psych/RatingEmo/personal trait data.csv")
>   View(personal.trait.data)
personal.trait.data <- read.csv("D:/Thesis/Thesis_Code/Psych/RatingEmo/personal trait data.csv")
dataP = personal.trait.data
dataP = personal.trait.data[c(23:180,375:532),]
View(dataP)
dataP = personal.trait.data[(23:180,375:532),]
dataP = personal.trait.data[23:180,375:532;]
dataP = personal.trait.data[23:180,]
View(dataP)
dataP = personal.trait.data[,23:180]
dataP = personal.trait.data[,c(23:180,375:532)]
dataP.data = personal.trait.data[,c(23:180,375:532)]
data.pca = princomp(dataP.data[,1:10])
summary(data.pca)
dataP.data = personal.trait.data[,c(23:180,375:532)]
data.pca = princomp(dataP.data[,1:20])
summary(data.pca)
dataP.data = personal.trait.data[,c(23:180,375:532)]
data.pca1 = princomp(dataP.data[,1:10])
summary(data.pca1)
dataP.data = personal.trait.data[,c(23:180,375:532)]
data.pca2 = princomp(dataP.data[,11:20])
summary(data.pca2)
dataP.data = personal.trait.data[,c(23:180,375:532)]
data.pca3 = princomp(dataP.data[,21:28])
summary(data.pca3)
